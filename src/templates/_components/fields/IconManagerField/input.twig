{#
 # Icon Manager Field Input
 #
 # @link      https://lindemannrock.com
 # @copyright Copyright (c) 2025 LindemannRock
 #}

{% import "_includes/forms" as forms %}

<div id="{{ id }}" class="icon-manager-field icon-size-{{ field.iconSize }}">
    <input type="hidden" name="{{ name }}" value="{{ value ? value|json_encode }}" data-allow-multiple="{{ field.allowMultiple ? 'true' : 'false' }}">
    
    <div class="icon-manager-selected">
        {% if field.allowMultiple %}
            {# Multiple icon selection display #}
            {% if value and value is iterable and value|length > 0 %}
                <div class="icon-manager-selected-icons-grid">
                    {% set iconSize = field.iconSize == 'small' ? 32 : (field.iconSize == 'large' ? 64 : 48) %}
                    {% for icon in value %}
                        <div class="icon-manager-selected-icon">
                            {% if icon.exists() %}
                                {{ icon.render({ size: iconSize })|raw }}
                            {% else %}
                                <div class="icon-manager-missing" title="{{ 'Icon file not found: {path}'|t('icon-manager', { path: icon.path }) }}">
                                    <svg width="{{ iconSize }}" height="{{ iconSize }}" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <circle cx="12" cy="12" r="10"></circle>
                                        <line x1="12" y1="8" x2="12" y2="12"></line>
                                        <line x1="12" y1="16" x2="12.01" y2="16"></line>
                                    </svg>
                                </div>
                            {% endif %}
                            {% if field.showLabels %}
                                <div class="icon-manager-selected-label">{{ icon.getDisplayLabel() }}</div>
                            {% endif %}
                        </div>
                    {% endfor %}
                </div>
            {% else %}
                <div class="icon-manager-placeholder">
                    {% set iconSize = field.iconSize == 'small' ? 32 : (field.iconSize == 'large' ? 64 : 48) %}
                    <svg width="{{ iconSize }}" height="{{ iconSize }}" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>
                        <line x1="9" y1="9" x2="15" y2="15"></line>
                        <line x1="15" y1="9" x2="9" y2="15"></line>
                    </svg>
                    <div class="icon-manager-placeholder-text">{{ 'No icons selected'|t('icon-manager') }}</div>
                </div>
            {% endif %}
        {% else %}
            {# Single icon selection display (existing logic) #}
            {% if value %}
                <div class="icon-manager-selected-icon">
                    {% set iconSize = field.iconSize == 'small' ? 32 : (field.iconSize == 'large' ? 64 : 48) %}
                    {% if value.exists() %}
                        {{ value.render({ size: iconSize })|raw }}
                    {% else %}
                        <div class="icon-manager-missing" title="{{ 'Icon file not found: {path}'|t('icon-manager', { path: value.path }) }}">
                            <svg width="{{ iconSize }}" height="{{ iconSize }}" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <circle cx="12" cy="12" r="10"></circle>
                                <line x1="12" y1="8" x2="12" y2="12"></line>
                                <line x1="12" y1="16" x2="12.01" y2="16"></line>
                            </svg>
                        </div>
                    {% endif %}
                    {% if field.showLabels %}
                        <div class="icon-manager-selected-label">{{ value.getDisplayLabel() }}</div>
                    {% endif %}
                </div>
            {% else %}
                <div class="icon-manager-placeholder">
                    {% set iconSize = field.iconSize == 'small' ? 32 : (field.iconSize == 'large' ? 64 : 48) %}
                    <svg width="{{ iconSize }}" height="{{ iconSize }}" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>
                        <line x1="9" y1="9" x2="15" y2="15"></line>
                        <line x1="15" y1="9" x2="9" y2="15"></line>
                    </svg>
                    <div class="icon-manager-placeholder-text">{{ 'No icon selected'|t('icon-manager') }}</div>
                </div>
            {% endif %}
        {% endif %}
        
        <div class="icon-manager-actions">
            <button type="button" class="btn icon-manager-select-btn">
                {% if field.allowMultiple %}
                    {% if value and value|length > 0 %}
                        {{ 'Edit Selection'|t('icon-manager') }}
                    {% else %}
                        {{ 'Select Icons'|t('icon-manager') }}
                    {% endif %}
                {% else %}
                    {{ value ? 'Edit Selection'|t('icon-manager') : 'Select Icons'|t('icon-manager') }}
                {% endif %}
            </button>
            {% if (field.allowMultiple and value and value|length > 0) or (not field.allowMultiple and value) %}
                <button type="button" class="btn icon-manager-clear-btn">
                    {{ 'Clear'|t('icon-manager') }}
                </button>
            {% endif %}
        </div>
    
    <div class="icon-manager-picker hidden">
            <div class="icon-manager-picker-header sticky">
                {% if field.showSearch %}
                    <div class="icon-manager-search">
                        <input type="text" 
                               class="text fullwidth icon-manager-search-input" 
                               placeholder="{{ 'Search icons...'|t('icon-manager') }}">
                    </div>
                {% endif %}
                
                {% if iconSets|length > 1 %}
                    {% if iconSets|length <= 4 %}
                        {# Show tabs for 4 or fewer icon sets #}
                        <nav class="icon-manager-tabs">
                            <ul>
                                {% for iconSet in iconSets %}
                                    <li>
                                        <a href="#icon-set-{{ iconSet.handle }}" 
                                           class="tab {% if loop.first %}sel{% endif %}"
                                           data-icon-set="{{ iconSet.handle }}">
                                            {{ iconSet.name }}
                                            <span class="icon-count" data-icon-set="{{ iconSet.handle }}"></span>
                                        </a>
                                    </li>
                                {% endfor %}
                            </ul>
                        </nav>
                    {% else %}
                        {# Show dropdown for 5+ icon sets #}
                        <div class="icon-manager-dropdown">
                            <div class="heading">
                                <label>{{ 'Icon Set'|t('icon-manager') }}</label>
                            </div>
                            <div class="input">
                                <div class="select">
                                    <select class="icon-manager-tab-select">
                                        {% for iconSet in iconSets %}
                                            <option value="{{ iconSet.handle }}" {% if loop.first %}selected{% endif %}>
                                                {{ iconSet.name }}
                                            </option>
                                        {% endfor %}
                                    </select>
                                </div>
                            </div>
                            <div class="icon-manager-tab-count">
                                <span class="icon-count-dropdown" data-icon-set="{{ iconSets|first.handle }}"></span>
                            </div>
                        </div>
                    {% endif %}
                {% endif %}
            </div>
            
            <div class="icon-manager-picker-body">
                {% for iconSet in iconSets %}
                    <div id="icon-set-{{ iconSet.handle }}" 
                         class="icon-manager-grid {% if not loop.first %}hidden{% endif %}"
                         data-icon-set="{{ iconSet.handle }}">
                        <h3 class="icon-set-title">{{ iconSet.name }}</h3>
                        
                        {# Regular icon grid #}
                        <div class="icon-manager-grid-inner">
                            {# Icons will be loaded here via JavaScript #}
                        </div>
                    </div>
                {% endfor %}
            </div>
            
            <div class="icon-manager-picker-footer">
                <button type="button" class="btn icon-manager-cancel-btn">
                    {{ 'Cancel'|t('icon-manager') }}
                </button>
                <button type="button" class="btn submit icon-manager-done-btn">
                    {{ 'Done'|t('icon-manager') }}
                </button>
            </div>
        </div>
    </div>
    
    {# Custom Label Inputs (SEPARATE, BELOW the main field) #}
    {% if field.allowCustomLabels %}
        {% if field.allowMultiple and value and value|length > 1 %}
            {# Multiple icons - individual inputs #}
            <div class="icon-manager-custom-labels-multiple">
                <div class="heading">
                    <label>{{ 'Custom Labels'|t('icon-manager') }}</label>
                </div>
                <div class="icon-manager-custom-labels-grid">
                    {% for icon in value %}
                        <div class="icon-manager-custom-label-item">
                            <div class="icon-preview">
                                {% set iconSize = 24 %}
                                <div class="icon-preview-image">
                                    {% if icon.exists() %}
                                        {{ icon.render({ size: iconSize })|raw }}
                                    {% else %}
                                        <svg width="{{ iconSize }}" height="{{ iconSize }}" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                            <rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>
                                            <line x1="9" y1="9" x2="15" y2="15"></line>
                                            <line x1="15" y1="9" x2="9" y2="15"></line>
                                        </svg>
                                    {% endif %}
                                </div>
                                <span class="icon-name">{{ icon.getDisplayLabel() }}</span>
                            </div>
                            <input type="text" 
                                   name="{{ name }}_customLabel_{{ loop.index0 }}" 
                                   value="{{ icon.customLabel ?? '' }}"
                                   class="text fullwidth icon-manager-custom-label-input"
                                   placeholder="{{ 'Custom label...'|t('icon-manager') }}"
                                   data-icon-index="{{ loop.index0 }}">
                        </div>
                    {% endfor %}
                </div>
                <p class="instructions">{{ 'Optional custom labels to override the default icon labels.'|t('icon-manager') }}</p>
            </div>
        {% elseif not field.allowMultiple and value %}
            {# Single icon - single input #}
            <div class="icon-manager-custom-label">
                <div class="heading">
                    <label for="{{ id }}-custom-label">{{ 'Custom Label'|t('icon-manager') }}</label>
                </div>
                <div class="input">
                    <input type="text" 
                           id="{{ id }}-custom-label" 
                           name="{{ name }}_customLabel" 
                           value="{{ value.customLabel ?? '' }}"
                           class="text fullwidth icon-manager-custom-label-input"
                           placeholder="{{ 'Enter custom label for this icon'|t('icon-manager') }}">
                </div>
                <p class="instructions">{{ 'Optional custom label to override the default icon label for this field.'|t('icon-manager') }}</p>
            </div>
        {% endif %}
    {% endif %}
    
    <div class="icon-manager-picker hidden">
        <div class="icon-manager-picker-header sticky">
            {% if field.showSearch %}
                <div class="icon-manager-search">
                    <input type="text" 
                           class="text fullwidth icon-manager-search-input" 
                           placeholder="{{ 'Search icons...'|t('icon-manager') }}">
                </div>
            {% endif %}
            
            {% if iconSets|length > 1 %}
                {% if iconSets|length <= 4 %}
                    {# Show tabs for 4 or fewer icon sets #}
                    <nav class="icon-manager-tabs">
                        <ul>
                            {% for iconSet in iconSets %}
                                <li>
                                    <a href="#icon-set-{{ iconSet.handle }}" 
                                       class="tab {% if loop.first %}sel{% endif %}"
                                       data-icon-set="{{ iconSet.handle }}">
                                        {{ iconSet.name }}
                                        <span class="icon-count" data-icon-set="{{ iconSet.handle }}"></span>
                                    </a>
                                </li>
                            {% endfor %}
                        </ul>
                    </nav>
                {% else %}
                    {# Show dropdown for 5+ icon sets #}
                    <div class="icon-manager-dropdown">
                        <div class="heading">
                            <label>{{ 'Icon Set'|t('icon-manager') }}</label>
                        </div>
                        <div class="input">
                            <div class="select">
                                <select class="icon-manager-tab-select">
                                    {% for iconSet in iconSets %}
                                        <option value="{{ iconSet.handle }}" {% if loop.first %}selected{% endif %}>
                                            {{ iconSet.name }}
                                        </option>
                                    {% endfor %}
                                </select>
                            </div>
                        </div>
                        <div class="icon-manager-tab-count">
                            <span class="icon-count-dropdown" data-icon-set="{{ iconSets|first.handle }}"></span>
                        </div>
                    </div>
                {% endif %}
            {% endif %}
        </div>
        
        <div class="icon-manager-picker-body">
            {% for iconSet in iconSets %}
                <div id="icon-set-{{ iconSet.handle }}" 
                     class="icon-manager-grid {% if not loop.first %}hidden{% endif %}"
                     data-icon-set="{{ iconSet.handle }}">
                    <h3 class="icon-set-title">{{ iconSet.name }}</h3>
                    
                    {# Regular icon grid #}
                    <div class="icon-manager-grid-inner">
                        {# Icons will be loaded here via JavaScript #}
                    </div>
                </div>
            {% endfor %}
        </div>
        
        <div class="icon-manager-picker-footer">
            <button type="button" class="btn icon-manager-cancel-btn">
                {{ 'Cancel'|t('icon-manager') }}
            </button>
            <button type="button" class="btn submit icon-manager-done-btn">
                {{ 'Done'|t('icon-manager') }}
            </button>
        </div>
    </div>
</div>

<style>
/* Icon Manager Field Styles - v{{ 'now'|date('U') }} */
.icon-manager-field {
    position: relative;
}

.icon-manager-selected {
    position: relative;
    display: flex;
    align-items: center;
    gap: 1.5rem;
    padding: 1.25rem;
    border: 1px solid hsl(212deg 25% 50% / 40%);
    border-radius: 5px;
    background: linear-gradient(135deg, #ffffff 0%, #f9fafb 100%);
    transition: all 0.2s ease;
}

.icon-manager-selected:hover {
    border-color: hsl(212deg 25% 50% / 60%);
}

.icon-manager-selected-icon {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-width: 80px;
    padding: 1rem;
    background: #ffffff;
    border: 1px solid #e5e7eb;
    border-radius: 5px;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
}

.icon-manager-selected-icon svg,
.icon-manager-selected-icon i {
    width: 48px !important;
    height: 48px !important;
    color: #374151;
}

.icon-manager-selected-label {
    margin-top: 0.75rem;
    font-size: 0.75rem;
    font-weight: 500;
    color: #6b7280;
    text-align: center;
    line-height: 1.2;
    max-width: 80px;
    word-wrap: break-word;
}

.icon-manager-placeholder {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-width: 80px;
    padding: 1.5rem;
    background: #f9fafb;
    border: 2px dashed #d1d5db;
    border-radius: 5px;
    color: #9ca3af;
    transition: all 0.2s ease;
}

.icon-manager-placeholder:hover {
    border-color: #9ca3af;
    background: #f3f4f6;
}

.icon-manager-placeholder svg {
    color: #d1d5db;
}

.icon-manager-placeholder-text {
    margin-top: 0.75rem;
    font-size: 0.75rem;
    font-weight: 500;
    text-align: center;
    line-height: 1.2;
}

.icon-manager-actions {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    margin-left: auto;
}

.icon-manager-actions .btn {
    min-width: 120px;
}

/* Let Craft's native button styles handle all styling */

.icon-manager-picker {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    margin-top: 0.75rem;
    background: white;
    border: 1px solid #e5e7eb;
    border-radius: 5px;
    box-shadow: 0 10px 20px rgba(0,0,0,0.08), 0 2px 8px rgba(0,0,0,0.04);
    z-index: 100;
    max-height: 600px;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    min-width: 480px;
}

.icon-manager-picker-header {
    border-bottom: 1px solid #f3f4f6;
    background: linear-gradient(135deg, #ffffff 0%, #f9fafb 100%);
    border-radius: 5px 5px 0 0;
}

.icon-manager-picker-header.sticky {
    position: sticky;
    top: 0;
    z-index: 10;
}

.icon-manager-search {
    padding: 1.5rem 1.5rem 0 1.5rem;
}

.icon-manager-search input {
    border-radius: 5px;
    border: 1px solid #d1d5db;
    padding: 0.75rem 1rem;
    font-size: 0.875rem;
    transition: all 0.2s ease;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
}

.icon-manager-search input:focus {
    border-color: #8b9dac;
    box-shadow: 0 0 0 3px rgba(139, 157, 172, 0.1);
    outline: none;
}

.icon-manager-tabs {
    margin: 1rem 0 0 0;
}

.icon-manager-tabs ul {
    display: flex;
    margin: 0;
    padding: 0;
    list-style: none;
    background: #f9fafb;
}

.icon-manager-tabs li {
    margin: 0;
    flex: 1;
}

.icon-manager-tabs .tab {
    display: block;
    padding: 0.875rem 1.25rem;
    color: #6b7280;
    text-decoration: none;
    border-bottom: 3px solid transparent;
    transition: all 0.2s ease;
    font-weight: 500;
    font-size: 0.875rem;
    text-align: center;
    background: transparent;
}

.icon-manager-tabs .tab:hover {
    color: #29323d;
    background: rgba(139, 157, 172, 0.05);
}

.icon-manager-tabs .tab.sel {
    color: #29323d;
    background: white;
    border-bottom-color: #8b9dac;
    box-shadow: 0 -2px 8px rgba(0, 0, 0, 0.04);
}

.icon-manager-tabs .icon-count {
    margin-left: 0.5rem;
    font-size: 0.75rem;
    color: #9ca3af;
    font-weight: 400;
    opacity: 0.8;
}

.icon-manager-tabs .tab.sel .icon-count {
    color: #8b9dac;
    opacity: 1;
}

.icon-manager-grid {
    padding: 1.5rem;
    background: #ffffff;
    overflow-y: auto;
}

.icon-set-title {
    display: none;
    margin: 0 0 1.5rem 0;
    padding: 0.75rem 0;
    font-size: 1.125rem;
    font-weight: 600;
    color: #374151;
    border-bottom: 2px solid #f3f4f6;
    text-align: center;
}

.icon-manager-picker.searching .icon-manager-grid:not([style*="display: none"]) .icon-set-title {
    display: block;
}

.icon-manager-picker.searching .icon-manager-tabs {
    display: none;
}

.icon-manager-grid-inner {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(90px, 1fr));
    gap: 0.75rem;
    padding: 0.5rem 0;
}

.icon-manager-grid-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 1rem 0.75rem;
    border: 1px solid transparent;
    border-radius: 5px;
    cursor: pointer;
    transition: all 0.2s ease;
    background: #ffffff;
    position: relative;
    overflow: hidden;
}

.icon-manager-grid-item::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, rgba(139, 157, 172, 0.05) 0%, rgba(175, 191, 207, 0.05) 100%);
    opacity: 0;
    transition: opacity 0.2s ease;
    border-radius: 5px;
}

.icon-manager-grid-item:hover {
    background: #f9fafb;
    border-color: #e5e7eb;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
    transform: translateY(-2px);
}

.icon-manager-grid-item:hover::before {
    opacity: 1;
}

.icon-manager-grid-item.selected {
    background: linear-gradient(135deg, #e6ecf1 0%, #d4dde5 100%);
    border-color: #8b9dac;
    box-shadow: 0 4px 12px rgba(139, 157, 172, 0.15);
    transform: translateY(-3px);
}

.icon-manager-grid-item.selected::before {
    opacity: 0;
}

.icon-manager-grid-item-icon {
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 0.5rem;
    position: relative;
    z-index: 1;
}

.icon-manager-grid-item-icon svg,
.icon-manager-grid-item-icon i {
    width: 32px !important;
    height: 32px !important;
    color: #374151;
    transition: color 0.2s ease;
}

.icon-manager-grid-item:hover .icon-manager-grid-item-icon svg,
.icon-manager-grid-item:hover .icon-manager-grid-item-icon i {
    color: #8b9dac;
}

.icon-manager-grid-item.selected .icon-manager-grid-item-icon svg,
.icon-manager-grid-item.selected .icon-manager-grid-item-icon i {
    color: #29323d;
}

.icon-manager-grid-item-label {
    font-size: 0.6875rem;
    color: #6b7280;
    text-align: center;
    word-break: break-word;
    line-height: 1.2;
    font-weight: 500;
    position: relative;
    z-index: 1;
    max-width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
}

.icon-manager-grid-item:hover .icon-manager-grid-item-label {
    color: #374151;
}

.icon-manager-grid-item.selected .icon-manager-grid-item-label {
    color: #29323d;
    font-weight: 600;
}

.icon-manager-picker-footer {
    padding: 1.25rem 1.5rem;
    border-top: 1px solid #f3f4f6;
    background: linear-gradient(135deg, #ffffff 0%, #f9fafb 100%);
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-radius: 0 0 5px 5px;
    gap: 0.75rem;
}

/* Let Craft's native button styles handle all styling */

.icon-manager-field.icon-size-small .icon-manager-grid-item {
    padding: 0.5rem 0.25rem;
}

.icon-manager-field.icon-size-small .icon-manager-grid-item-icon {
    width: 28px;
    height: 28px;
    margin-bottom: 0.25rem;
}

.icon-manager-field.icon-size-small .icon-manager-grid-item-icon svg,
.icon-manager-field.icon-size-small .icon-manager-grid-item-icon i {
    width: 20px !important;
    height: 20px !important;
}

.icon-manager-field.icon-size-small .icon-manager-grid-inner {
    grid-template-columns: repeat(auto-fill, minmax(70px, 1fr));
}

.icon-manager-field.icon-size-large .icon-manager-grid-item-icon {
    width: 56px;
    height: 56px;
}

.icon-manager-field.icon-size-large .icon-manager-grid-item-icon svg,
.icon-manager-field.icon-size-large .icon-manager-grid-item-icon i {
    width: 48px !important;
    height: 48px !important;
}

.icon-manager-field.icon-size-large .icon-manager-grid-inner {
    grid-template-columns: repeat(auto-fill, minmax(110px, 1fr));
}

/* Field preview icon sizes */
.icon-manager-field.icon-size-small .icon-manager-selected-icon svg,
.icon-manager-field.icon-size-small .icon-manager-selected-icon i,
.icon-manager-field.icon-size-small .icon-manager-placeholder svg {
    width: 32px !important;
    height: 32px !important;
}

.icon-manager-field.icon-size-small .icon-manager-selected-icon,
.icon-manager-field.icon-size-small .icon-manager-placeholder {
    min-width: 60px;
    padding: 0.75rem;
}

.icon-manager-field.icon-size-small .icon-manager-selected-label,
.icon-manager-field.icon-size-small .icon-manager-placeholder-text {
    font-size: 0.625rem;
}

.icon-manager-field.icon-size-large .icon-manager-selected-icon svg,
.icon-manager-field.icon-size-large .icon-manager-selected-icon i,
.icon-manager-field.icon-size-large .icon-manager-placeholder svg {
    width: 64px !important;
    height: 64px !important;
}

.icon-manager-field.icon-size-large .icon-manager-selected-icon,
.icon-manager-field.icon-size-large .icon-manager-placeholder {
    min-width: 100px;
    padding: 1.5rem;
}

.icon-manager-field.icon-size-large .icon-manager-selected-label,
.icon-manager-field.icon-size-large .icon-manager-placeholder-text {
    font-size: 0.875rem;
}

.icon-manager-empty {
    padding: 2rem;
    text-align: center;
    color: #9aa5b1;
    font-style: italic;
}

.icon-manager-missing {
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    opacity: 0.5;
    cursor: help;
}

.icon-manager-missing svg {
    color: #f56565;
}

.icon-manager-missing::after {
    content: attr(title);
    position: absolute;
    bottom: -2rem;
    left: 50%;
    transform: translateX(-50%);
    background: rgba(0, 0, 0, 0.8);
    color: white;
    padding: 0.25rem 0.5rem;
    border-radius: 3px;
    font-size: 0.75rem;
    white-space: nowrap;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.2s;
}

.icon-manager-missing:hover::after {
    opacity: 1;
}

.icon-manager-picker.searching .icon-manager-grid + .icon-manager-grid {
    border-top: 1px solid #e3e5e8;
    margin-top: 1rem;
    padding-top: 1rem;
}

.icon-manager-kit-instructions {
    padding: 1.5rem;
    background: #f7f7f8;
    border: 1px solid #e3e5e8;
    border-radius: 5px;
    margin: 1rem 0;
}

.icon-manager-kit-instructions h4 {
    margin: 0 0 1rem 0;
    color: #0d78f2;
}

.icon-manager-kit-instructions code {
    background: #e3e5e8;
    padding: 0.25rem 0.5rem;
    border-radius: 5px;
    font-family: monospace;
}

.icon-manager-kit-instructions ul {
    margin: 0.5rem 0;
    padding-left: 1.5rem;
}

.icon-manager-kit-instructions a {
    color: #0d78f2;
    text-decoration: none;
}

.icon-manager-kit-instructions a:hover {
    text-decoration: underline;
}

.icon-manager-manual-input {
    padding: 1.5rem;
}

.icon-manager-manual-input h3 {
    margin: 0 0 1rem 0;
    color: #0d78f2;
}

.icon-manager-manual-preview {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin: 1rem 0;
    padding: 1rem;
    background: #f7f7f8;
    border: 1px solid #e3e5e8;
    border-radius: 5px;
}

.icon-manager-manual-preview .preview-label {
    font-weight: 600;
}

.icon-manager-kit-help {
    margin-top: 1.5rem;
    padding-top: 1rem;
    border-top: 1px solid #e3e5e8;
}

.icon-manager-kit-help details {
    margin: 0;
}

.icon-manager-kit-help summary {
    cursor: pointer;
    font-weight: 600;
    color: #0d78f2;
    margin-bottom: 0.5rem;
}

.icon-manager-kit-help ul {
    margin: 0.5rem 0;
    padding-left: 1.5rem;
}

.icon-manager-kit-help a {
    color: #0d78f2;
    text-decoration: none;
}

.icon-manager-kit-help a:hover {
    text-decoration: underline;
}

/* Dropdown styles */
.icon-manager-dropdown {
    display: flex;
    align-items: center;
    gap: 1.25rem;
    margin: 1rem 1.5rem 0 1.5rem;
    padding: 1rem;
    background: white;
    border: 1px solid #e5e7eb;
    border-radius: 5px;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
}

.icon-manager-dropdown .heading {
    margin: 0;
    min-width: 90px;
}

.icon-manager-dropdown .heading label {
    font-size: 0.875rem;
    font-weight: 600;
    color: #374151;
    margin: 0;
}

.icon-manager-dropdown .input {
    flex: 1;
    margin: 0;
}

.icon-manager-dropdown .select {
    margin: 0;
}

.icon-manager-dropdown select {
    width: 100%;
    border-radius: 5px;
    border: 1px solid #d1d5db;
    padding: 0.625rem 0.875rem;
    font-size: 0.875rem;
    font-weight: 500;
    color: #374151;
    background: white;
    transition: all 0.2s ease;
    cursor: pointer;
}

.icon-manager-dropdown select:focus {
    border-color: #8b9dac;
    box-shadow: 0 0 0 3px rgba(139, 157, 172, 0.1);
    outline: none;
}

.icon-manager-tab-count {
    min-width: 100px;
    text-align: right;
}

.icon-count-dropdown {
    font-size: 0.8125rem;
    color: #6b7280;
    font-weight: 500;
    background: #f3f4f6;
    padding: 0.375rem 0.75rem;
    border-radius: 5px;
    border: 1px solid #e5e7eb;
}

/* Body adjustment for sticky header */
.icon-manager-picker-body {
    flex: 1;
    overflow-y: auto;
}

/* Ensure search stays visible when dropdown is used */
.icon-manager-picker.searching .icon-manager-dropdown {
    display: none;
}

/* Multiple icon selection styles */
.icon-manager-selected-icons-grid {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    align-items: flex-start;
    flex: 1;
    min-width: 0;
}

.icon-manager-field[data-allow-multiple="true"] .icon-manager-selected {
    align-items: flex-start;
    gap: 1rem;
}

.icon-manager-field[data-allow-multiple="true"] .icon-manager-selected-icon {
    margin: 0;
    min-width: auto;
    padding: 0.75rem;
}

.icon-manager-field[data-allow-multiple="true"] .icon-manager-actions {
    margin-left: 0;
    flex-shrink: 0;
    align-self: flex-start;
}

/* Table view styles for multiple icons */
.icon-manager-table-icon {
    display: inline-block;
    margin-right: 0.25rem;
}

.icon-manager-table-count {
    font-size: 0.75rem;
    color: #6b7280;
    background: #f3f4f6;
    padding: 0.125rem 0.375rem;
    border-radius: 3px;
    font-weight: 500;
}

/* Multi-selection picker styles */
.icon-manager-field[data-allow-multiple="true"] .icon-manager-grid-item.selected {
    background: linear-gradient(135deg, #dbeafe 0%, #bfdbfe 100%);
    border-color: #3b82f6;
    box-shadow: 0 4px 12px rgba(59, 130, 246, 0.15);
}

.icon-manager-field[data-allow-multiple="true"] .icon-manager-grid-item.selected .icon-manager-grid-item-icon svg,
.icon-manager-field[data-allow-multiple="true"] .icon-manager-grid-item.selected .icon-manager-grid-item-icon i {
    color: #1d4ed8;
}

/* Selection indicator for multi-select */
.icon-manager-grid-item.selected::after {
    content: '✓';
    position: absolute;
    top: 0.25rem;
    right: 0.25rem;
    width: 18px;
    height: 18px;
    background: #3b82f6;
    color: white;
    border-radius: 50%;
    font-size: 0.75rem;
    font-weight: bold;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 2;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.icon-manager-field:not([data-allow-multiple="true"]) .icon-manager-grid-item.selected::after {
    display: none;
}

/* Custom Label Input */
.icon-manager-custom-label,
.icon-manager-custom-labels-multiple {
    margin-top: 1rem;
    padding-top: 1rem;
    border-top: 1px solid #e5e7eb;
}

.icon-manager-custom-label .heading,
.icon-manager-custom-labels-multiple .heading {
    margin-bottom: 0.5rem;
}

.icon-manager-custom-label .heading label,
.icon-manager-custom-labels-multiple .heading label {
    font-size: 0.875rem;
    font-weight: 600;
    color: #374151;
    display: block;
}

.icon-manager-custom-label .input {
    margin-bottom: 0.25rem;
}

.icon-manager-custom-label .instructions,
.icon-manager-custom-labels-multiple .instructions {
    margin: 0;
    font-size: 0.8125rem;
    color: #6b7280;
    line-height: 1.4;
}

/* Multiple Custom Labels Grid */
.icon-manager-custom-labels-grid {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    margin-bottom: 0.5rem;
}

.icon-manager-custom-label-item {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    padding: 1rem;
    border: 1px solid #e5e7eb;
    border-radius: 5px;
    background: #f9fafb;
}

.icon-manager-custom-label-item .icon-preview {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 0.25rem;
}

.icon-manager-custom-label-item .icon-preview-image {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 28px;
    height: 28px;
    background: white;
    border: 1px solid #e5e7eb;
    border-radius: 4px;
    flex-shrink: 0;
}

.icon-manager-custom-label-item .icon-preview-image svg {
    color: #374151;
}

.icon-manager-custom-label-item .icon-name {
    font-size: 0.75rem;
    color: #6b7280;
    font-weight: 500;
    line-height: 1.2;
}

.icon-manager-custom-label-item input {
    width: 100%;
    border-radius: 3px;
    border: 1px solid #d1d5db;
    padding: 0.5rem;
    font-size: 0.875rem;
    margin-top: 0.25rem;
}
</style>